// <auto-generated />
using BooksApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BooksApp.Migrations
{
    [DbContext(typeof(BooksDbContext))]
    [Migration("20240429191420_NullError")]
    partial class NullError
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BooksApp.Models.Book", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookID"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookID = 1,
                            Author = "Salman Nazir",
                            CategoryID = 3,
                            Description = "Learn C#",
                            ImgUrl = "",
                            Price = 19.99m,
                            Title = "C# for Beginners"
                        },
                        new
                        {
                            BookID = 2,
                            Author = "Salman Nazir",
                            CategoryID = 3,
                            Description = "This is useful",
                            ImgUrl = "",
                            Price = 19.99m,
                            Title = "Advanced C#"
                        },
                        new
                        {
                            BookID = 3,
                            Author = "Salman Nazir",
                            CategoryID = 3,
                            Description = "This is useful",
                            ImgUrl = "",
                            Price = 19.99m,
                            Title = "HTML for Beginners"
                        });
                });

            modelBuilder.Entity("BooksApp.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "How to Travel",
                            Name = "Travel"
                        },
                        new
                        {
                            ID = 2,
                            Description = "Fictional Science",
                            Name = "Sci-Fi"
                        },
                        new
                        {
                            ID = 3,
                            Description = "Technology",
                            Name = "Technology"
                        });
                });

            modelBuilder.Entity("BooksApp.Models.Book", b =>
                {
                    b.HasOne("BooksApp.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });
#pragma warning restore 612, 618
        }
    }
}
